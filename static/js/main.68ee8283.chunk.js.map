{"version":3,"sources":["components/FormComponent.js","components/ModalComponent.js","components/UsersTable.js","App.js","reportWebVitals.js","index.js"],"names":["schema","yup","shape","userName","required","surname","email","address","FormComponent","onSubmit","selectedUser","useState","setAddress","useForm","resolver","yupResolver","defaultValues","register","handleSubmit","errors","formState","reset","setValue","className","value","id","uuid","message","type","name","placeholder","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","map","suggestion","index","style","backgroundColor","active","cursor","description","ModalComponent","show","rest","UsersTable","users","handleClick","user","onClick","App","setUsers","setSelectedUser","getDataFromStorage","a","JSON","parse","localStorage","getItem","data","useEffect","setItem","oldData","push","stringify","alert","getUpdatedUsers","newUsers","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68ee8283.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\nimport uuid from 'uuid';\r\n\r\nconst schema = yup.object().shape({\r\n\tuserName: yup.string().required(\"Please, enter name!\"),\r\n\tsurname: yup.string().required(\"Please, enter surname!\"),\r\n\temail: yup.string().email().required(\"Please, enter valid email!\"),\r\n\taddress: yup.string().required(\"Please, enter address!\")\r\n});\r\n\r\nexport const FormComponent = ({ onSubmit, selectedUser }) => {\r\n\tconst [address, setAddress] = useState(selectedUser?.address || '');\r\n\r\n\tconst { register, handleSubmit, formState: { errors }, reset, setValue } = useForm({\r\n\t\tresolver: yupResolver(schema),\r\n\t\tdefaultValues: {\r\n\t\t\tuserName: selectedUser?.userName || '',\r\n\t\t\tsurname: selectedUser?.surname || '',\r\n\t\t\temail: selectedUser?.email || '',\r\n\t\t\taddress: address\r\n\t\t}\r\n\t});\r\n\r\n\tconst handleAddressChange = (value) => {\r\n\t\tsetAddress(value);\r\n\t\tsetValue('address', value);\r\n\t}\r\n\r\n\tconst beforeSubmit = (value) => {\r\n\t\tsetAddress('');\r\n\t\treset();\r\n\t\tonSubmit({id: uuid(), ...value});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"form-component\">\r\n\t\t\t<h2 className=\"form-component-title\">Enter user's information</h2>\r\n\t\t\t<div className=\"form-component-inputs\">\r\n\t\t\t\t<form onSubmit={handleSubmit(beforeSubmit)}>\r\n\r\n\t\t\t\t\t<p>{errors.userName?.message}</p>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tname=\"userName\" \r\n\t\t\t\t\t\tplaceholder=\"Enter name...\" \r\n\t\t\t\t\t\t{...register('userName')}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<p>{errors.surname?.message}</p>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tname=\"surname\" \r\n\t\t\t\t\t\tplaceholder=\"Enter surname...\" \r\n\t\t\t\t\t\t{...register('surname')} \r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<p>{errors.email?.message}</p>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\t\tplaceholder=\"Enter email...\" \r\n\t\t\t\t\t\t{...register('email')}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<p>{errors.address?.message}</p>\r\n\t\t\t\t\t<PlacesAutocomplete value={address} onChange={setAddress} onSelect={handleAddressChange}>\r\n\t\t\t\t\t\t{({getInputProps, suggestions, getSuggestionItemProps, loading}) => \r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input {...getInputProps({placeholder: \"Enter address...\"})} />\r\n\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{loading ? <div>...loading</div> : null}\r\n\r\n\t\t\t\t\t\t\t\t{suggestions.map((suggestion, index) => {\r\n\t\t\t\t\t\t\t\t\tconst style = {\r\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: suggestion.active ? '#41b6e6' : '#fff',\r\n\t\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\treturn <div key={index} {...getSuggestionItemProps(suggestion, { style })}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{suggestion.description}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t</PlacesAutocomplete>\r\n\r\n\t\t\t\t\t<input type=\"submit\" id=\"submit\" />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport { FormComponent } from './FormComponent';\r\n\r\nexport const ModalComponent = ({ show, ...rest }) => {\r\n\tif (!show) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`modal ${show ? 'show' : ''}`}>\r\n\t\t\t<FormComponent {...rest} />\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react';\r\n\r\nexport const UsersTable = ({ users, handleClick }) => {\r\n\r\n\treturn (\r\n\t\t<table className=\"users\">\r\n\t\t\t<tbody>\r\n\t\t\t\t{users.map((user, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr key={index} onClick={() => handleClick(user)}>\r\n\t\t\t\t\t\t\t<td>{user.userName}</td>\r\n\t\t\t\t\t\t\t<td>{user.surname}</td>\r\n\t\t\t\t\t\t\t<td>{user.email}</td>\r\n\t\t\t\t\t\t\t<td>{user.address}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { FormComponent } from './components/FormComponent';\nimport { ModalComponent } from './components/ModalComponent';\nimport { UsersTable } from './components/UsersTable';\nimport './styles/app.scss';\n\nconst App = () => {\n\tconst [users, setUsers] = useState([]);\n\tconst [selectedUser, setSelectedUser] = useState();\n\n\tconst getDataFromStorage = async () => {\n\t\tlet data = await JSON.parse(localStorage.getItem('data'));\n\t\tsetUsers(data);\n\t}\n\n\tconst handleClick = (user) => {\n\t\tsetSelectedUser(user);\n\t}\n\n\tconst submitForm = (data) => {\n\t\tif (localStorage.getItem('data') == null) {\n\t\t\tlocalStorage.setItem('data', '[]')\n\t\t}\n\n\t\tlet oldData = JSON.parse(localStorage.getItem('data'));\n\t\toldData.push(data);\n\n\t\tlocalStorage.setItem('data', JSON.stringify(oldData));\n\t\tsetUsers(oldData);\n\t\talert(`User's info saved succesfully!`);\n\t}\n\n\tconst onUserChange = (data) => {\n\t\tconst newUsers = [...users.filter(({ id }) => id !== data.id), data];\n\n\t\tsetUsers(newUsers);\n\t\tlocalStorage.setItem('data', JSON.stringify(newUsers))\n\t\tsetSelectedUser(null)\n\t}\n\n\tuseEffect(() => {\n\t\tgetDataFromStorage();\n\t}, []);\n\t\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<div className=\"app-form\">\n\t\t\t\t<FormComponent \n\t\t\t\t\tonSubmit={submitForm}\n\t\t\t\t\tgetUpdatedUsers={getDataFromStorage}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"app-users\">\n\t\t\t\t{users && \n\t\t\t\t\t<UsersTable \n\t\t\t\t\t\tusers={users} \n\t\t\t\t\t\thandleClick={handleClick}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t<ModalComponent \n\t\t\t\t\tshow={!!selectedUser}\n\t\t\t\t\tselectedUser={selectedUser}\n\t\t\t\t\tonSubmit={onUserChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}